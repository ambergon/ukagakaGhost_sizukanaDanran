








// それぞれの名前で始まる関数名をリストアップする。
// "CheckSecond." / "CheckMinute." / "CheckHour."  
//{{{
// 起動処理---------------------------------------------------------
AutoLoad.system_Time {
    CheckSeconds    = GETFUNCLIST( "CheckSecond." )
    CheckMinutes    = GETFUNCLIST( "CheckMinute." )
    CheckHours      = GETFUNCLIST( "CheckHour."   )
}
//}}}
//{{{
// 終了処理---------------------------------------------------------
AutoUnload.system_Time {
    ERASEVAR( 'CheckSeconds' )
    ERASEVAR( 'CheckMinutes' )
    ERASEVAR( 'CheckHours' )
}
//}}}
//{{{
// CheckSecond.関数をまとめて実行する。-----------------------------
OnSecondChange {
    _secondText = ""
    for _i = 0 ; _i < ARRAYSIZE( CheckSeconds ) ; _i++ {
        _text = EVAL(CheckSeconds[_i])
        if ( _text != "") {
            _secondText = _secondText + _text + "\n\n"
        }
    }
    _secondText
}
//}}}
//{{{
// CheckMinutes.関数をまとめて実行する------------------------------
OnMinuteChange {
    //not notify
    if reference[3] == 1 {
        _minuteText = ""
        for _i = 0 ; _i < ARRAYSIZE( CheckMinutes ) ; _i++ {
            _text = EVAL(CheckMinutes[_i])
            if ( _text != "") {
                _minuteText = _minuteText + _text + "\n\n"
            }
        }
        _minuteText
    }
}
//}}}
//{{{
// CheckHours.関数をまとめて実行する--------------------------------
OnHourTimeSignal {
    _hourText = ""
    for _i = 0 ; _i < ARRAYSIZE( CheckHours ) ; _i++ {
        _text = EVAL(CheckHours[_i])
        if ( _text != "") {
            _hourText = _hourText + _text + "\n\n"
        }
    }
    _hourText
}
//}}}


CheckHours.SleepTime {
    _h = TOINT( "%(hour)" ) 
    if _h == 2 || _h == 3 {
        "もう・・・だめ・・・・。おやすみ。\w9\w9\w9\-\e"
    }
}







