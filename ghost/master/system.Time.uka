








// それぞれの名前で始まる関数名をリストアップする。
// "CheckSecond." / "CheckMinute." / "CheckHour."  
//{{{
// 起動処理---------------------------------------------------------
AutoLoad.system_Time {
    Time.SecondFuncList    = GETFUNCLIST( "CheckSecond." )
    Time.MinuteFuncList    = GETFUNCLIST( "CheckMinute." )
    Time.HourFuncList      = GETFUNCLIST( "CheckHour."   )

    Time.SecondText = ""
    Time.MinuteText = ""
}
//}}}
//{{{
// 終了処理---------------------------------------------------------
AutoUnload.system_Time {
    ERASEVAR( 'Time.SecondFuncList' )
    ERASEVAR( 'Time.MinuteFuncList' )
    ERASEVAR( 'Time.HourFuncList' )

    ERASEVAR( 'Time.SecondText' )
    ERASEVAR( 'Time.MinuteText' )
}
//}}}
//{{{
// CheckSecond.関数をまとめて実行する。-----------------------------
OnSecondChange {
    for _i = 0 ; _i < ARRAYSIZE( Time.SecondFuncList ) ; _i++ {
        _one = EVAL(Time.SecondFuncList[_i])
        if ( _one != "") {
            Time.SecondText = Time.SecondText + _one + "\n\n"
        }
    }

    //not notify
    if reference[3] == 1 {
        _text = Time.SecondText
        _text 
        Time.SecondText = ""
    }
}
//}}}
//{{{
// Time.MinuteFuncList.関数をまとめて実行する------------------------------
OnMinuteChange {

    for _i = 0 ; _i < ARRAYSIZE( Time.MinuteFuncList ) ; _i++ {
        _one = EVAL(Time.MinuteFuncList[_i])
        if ( _one != "") {
            Time.MinuteText = Time.MinuteText + _one + "\n\n"
        }
    }

    //not notify
    if reference[3] == 1 {
        _text = Time.MinuteText
        _text 
        Time.MinuteText = ""
    }
}
//}}}
//{{{
// Time.HourFuncList.関数をまとめて実行する--------------------------------
// hour は notify が発生しない。
OnHourTimeSignal {
    _hourText = ""
    for _i = 0 ; _i < ARRAYSIZE( Time.HourFuncList ) ; _i++ {
        _text = EVAL(Time.HourFuncList[_i])
        if ( _text != "") {
            _hourText = _hourText + _text + "\n\n"
        }
    }
    _hourText
}
//}}}









